apply plugin: "io.spring.dependency-management"

dependencyManagement {
    dependencies {
        dependency "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

        // core dependencies
        dependency "androidx.annotation:annotation:1.6.0"

        // ext-acorn-android
        dependency "androidx.appcompat:appcompat:1.6.1"
        dependency "androidx.interpolator:interpolator:1.0.0"

        // ext-acorn-rx
        dependency "io.reactivex.rxjava2:rxjava:2.2.21"
        dependency "io.reactivex.rxjava2:rxkotlin:2.4.0"

        // ext-acorn-android-timber
        dependency "com.jakewharton.timber:timber:5.0.1"

        // ext-acorn-android-lifecycle
        dependency "androidx.lifecycle:lifecycle-runtime:2.6.1"


        // "Hello"-sample apps
        dependency "androidx.core:core-ktx:1.10.0"
        dependency "com.google.android.material:material:1.8.0"
        dependency "androidx.constraintlayout:constraintlayout:2.1.4"
        dependency "io.reactivex.rxjava2:rxandroid:2.1.1"
        dependency "com.squareup.picasso:picasso:2.71828"
        dependency "nl.dionsegijn:konfetti:1.3.2"

        // Notes app
        dependency "com.jakewharton.rxbinding3:rxbinding:3.1.0"
        dependency "com.jakewharton.rxbinding3:rxbinding-appcompat:3.1.0"
        dependency "com.squareup.sqlbrite3:sqlbrite-kotlin:3.2.0"
        dependency "android.arch.persistence:db-framework:1.1.1"


        // Testing & checks
        dependency "com.nhaarman:expect.kt:1.0.1"
        dependency "org.mockito.kotlin:mockito-kotlin:4.1.0"
        dependency "org.junit.jupiter:junit-jupiter-api:5.9.3"
        dependency "org.junit.jupiter:junit-jupiter-engine:5.9.3"

        dependency "androidx.test.espresso:espresso-core:3.5.1"
        dependency "androidx.test.espresso:espresso-contrib:3.5.1"
        dependency "androidx.test:runner:1.5.2"
        dependency "androidx.test:rules:1.5.0"
        dependency "androidx.test.uiautomator:uiautomator:2.2.0"

        def androidToolsVersion = "30.0.1"
        dependency "com.android.tools.lint:lint:$androidToolsVersion"
        dependency "com.android.tools.lint:lint-api:$androidToolsVersion"
        dependency "com.android.tools.lint:lint-checks:$androidToolsVersion"
        dependency "com.android.tools.lint:lint-tests:$androidToolsVersion"
    }
}

allprojects { project ->
    project.configurations.all {
        resolutionStrategy {
            eachDependency { dependency ->
                if (dependency.requested.name in ["kotlin-stdlib", "kotlin-stdlib-jdk7", "kotlin-stdlib-jdk8", "kotlin-reflect"]) {
                    dependency.useVersion(kotlinVersion)
                }
            }
        }
    }
}

rootProject.dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
